<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.jctools</groupId>
		<artifactId>jctools-parent</artifactId>
		<version>3.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>jctools-core</artifactId>
	<name>Java Concurrency Tools Core Library</name>
	<description>Java Concurrency Tools Core Library</description>
	<packaging>bundle</packaging>

	<dependencies>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava-testlib</artifactId>
			<version>${guava-testlib.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<includes>
						<include>*</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>4.2.1</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Import-Package>sun.misc;resolution:=optional</Import-Package>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<additionalOptions>
						<additionalOption>-Xdoclint:none</additionalOption>
					</additionalOptions>
					<source>8</source>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifestEntries>
							<Automatic-Module-Name>org.jctools.core</Automatic-Module-Name>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <dependencies>
                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>jctools-build</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>generate-atomic-array-queues</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <includePluginDependencies>true</includePluginDependencies>
                            <includeProjectDependencies>false</includeProjectDependencies>
                            <mainClass>org.jctools.queues.atomic.JavaParsingAtomicArrayQueueGenerator</mainClass>
                            <arguments>
                                <!-- Output dest -->
                                <argument>${basedir}/src/main/java/org/jctools/queues/atomic</argument>
                                <!-- List of input files -->
                                <argument>${basedir}/src/main/java/org/jctools/queues/SpscArrayQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/SpmcArrayQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/MpscArrayQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/MpmcArrayQueue.java</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-atomic-linked-queues</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <includePluginDependencies>true</includePluginDependencies>
                            <includeProjectDependencies>false</includeProjectDependencies>
                            <mainClass>org.jctools.queues.atomic.JavaParsingAtomicLinkedQueueGenerator</mainClass>
                            <arguments>
                                <!-- Output dest -->
                                <argument>${basedir}/src/main/java/org/jctools/queues/atomic</argument>
                                <!-- List of input files -->
                                <argument>${basedir}/src/main/java/org/jctools/queues/BaseLinkedQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/SpscLinkedQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/MpscLinkedQueue.java</argument>

                                <argument>${basedir}/src/main/java/org/jctools/queues/BaseSpscLinkedArrayQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/SpscChunkedArrayQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/SpscUnboundedArrayQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/SpscGrowableArrayQueue.java</argument>

                                <argument>${basedir}/src/main/java/org/jctools/queues/BaseMpscLinkedArrayQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/MpscChunkedArrayQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/MpscUnboundedArrayQueue.java</argument>
                                <argument>${basedir}/src/main/java/org/jctools/queues/MpscGrowableArrayQueue.java</argument>
                            </arguments>
                        </configuration>
                    </execution>
               </executions>
            </plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-code-coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
        </plugins>
	</build>
</project>
